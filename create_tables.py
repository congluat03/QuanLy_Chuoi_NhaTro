#!/usr/bin/env python3
"""
Script t·ª± ƒë·ªông t·∫°o b·∫£ng dangtinphong v√† hinhanhtindang
Ch·∫°y script n√†y ƒë·ªÉ t·∫°o b·∫£ng m·ªõi tr√™n database MySQL
"""

import os
import sys
import django
from django.conf import settings
from django.db import connection, transaction
from django.core.management import execute_from_command_line

# Th√™m th∆∞ m·ª•c d·ª± √°n v√†o Python path
sys.path.append('/mnt/e/Hoc/KhoaLuan/Code/WebsiteQuanLyNhaTro')

# Thi·∫øt l·∫≠p Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

def create_tables():
    """T·∫°o b·∫£ng dangtinphong v√† hinhanhtindang"""
    
    sql_statements = [
        # T·∫°o b·∫£ng dangtinphong
        """
        CREATE TABLE IF NOT EXISTS `dangtinphong` (
            `MA_TIN_DANG` int(11) NOT NULL AUTO_INCREMENT,
            `MA_PHONG` int(11) NOT NULL,
            `SDT_LIEN_HE` varchar(15) NOT NULL COMMENT 'S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá',
            `EMAIL_LIEN_HE` varchar(100) DEFAULT NULL COMMENT 'Email li√™n h·ªá',
            `TRANG_THAI` varchar(20) NOT NULL DEFAULT 'DANG_HIEN_THI' COMMENT 'Tr·∫°ng th√°i tin ƒëƒÉng',
            `NGAY_DANG` datetime(6) NOT NULL COMMENT 'Ng√†y ƒëƒÉng tin',
            `NGAY_CAP_NHAT` datetime(6) NOT NULL COMMENT 'Ng√†y c·∫≠p nh·∫≠t',
            `LUOT_XEM` int(11) NOT NULL DEFAULT 0 COMMENT 'S·ªë l∆∞·ª£t xem',
            `LUOT_LIEN_HE` int(11) NOT NULL DEFAULT 0 COMMENT 'S·ªë l∆∞·ª£t li√™n h·ªá',
            PRIMARY KEY (`MA_TIN_DANG`),
            UNIQUE KEY `MA_PHONG` (`MA_PHONG`),
            CONSTRAINT `dangtinphong_MA_PHONG_fk` FOREIGN KEY (`MA_PHONG`) REFERENCES `phongtro` (`MA_PHONG`) ON DELETE CASCADE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='B·∫£ng qu·∫£n l√Ω tin ƒëƒÉng ph√≤ng'
        """,
        
        # T·∫°o b·∫£ng hinhanhtindang
        """
        CREATE TABLE IF NOT EXISTS `hinhanhtindang` (
            `MA_HINH_ANH` int(11) NOT NULL AUTO_INCREMENT,
            `MA_TIN_DANG` int(11) NOT NULL,
            `HINH_ANH` varchar(100) NOT NULL COMMENT 'ƒê∆∞·ªùng d·∫´n file h√¨nh ·∫£nh',
            `THU_TU` int(10) unsigned NOT NULL DEFAULT 1 COMMENT 'Th·ª© t·ª± hi·ªÉn th·ªã',
            `MO_TA` varchar(200) DEFAULT NULL COMMENT 'M√¥ t·∫£ h√¨nh ·∫£nh',
            `NGAY_TAO` datetime(6) NOT NULL COMMENT 'Ng√†y t·∫°o',
            PRIMARY KEY (`MA_HINH_ANH`),
            KEY `hinhanhtindang_MA_TIN_DANG_idx` (`MA_TIN_DANG`),
            CONSTRAINT `hinhanhtindang_MA_TIN_DANG_fk` FOREIGN KEY (`MA_TIN_DANG`) REFERENCES `dangtinphong` (`MA_TIN_DANG`) ON DELETE CASCADE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='B·∫£ng h√¨nh ·∫£nh tin ƒëƒÉng'
        """,
        
        # T·∫°o indexes
        "CREATE INDEX IF NOT EXISTS `idx_dangtinphong_trang_thai` ON `dangtinphong` (`TRANG_THAI`)",
        "CREATE INDEX IF NOT EXISTS `idx_dangtinphong_ngay_dang` ON `dangtinphong` (`NGAY_DANG`)",
        "CREATE INDEX IF NOT EXISTS `idx_hinhanhtindang_thu_tu` ON `hinhanhtindang` (`THU_TU`)",
    ]
    
    try:
        with connection.cursor() as cursor:
            with transaction.atomic():
                for sql in sql_statements:
                    print(f"Executing: {sql[:50]}...")
                    cursor.execute(sql)
                    
        print("‚úÖ T·∫°o b·∫£ng th√†nh c√¥ng!")
        
        # Ki·ªÉm tra b·∫£ng ƒë√£ t·∫°o
        with connection.cursor() as cursor:
            cursor.execute("SHOW TABLES LIKE '%dang%'")
            tables = cursor.fetchall()
            print(f"üìã C√°c b·∫£ng ƒë√£ t·∫°o: {[table[0] for table in tables]}")
            
            # Hi·ªÉn th·ªã c·∫•u tr√∫c b·∫£ng
            for table_name in ['dangtinphong', 'hinhanhtindang']:
                try:
                    cursor.execute(f"DESCRIBE {table_name}")
                    columns = cursor.fetchall()
                    print(f"\nüìä C·∫•u tr√∫c b·∫£ng {table_name}:")
                    for col in columns:
                        print(f"  - {col[0]}: {col[1]} {col[2] if col[2] else ''}")
                except Exception as e:
                    print(f"‚ùå L·ªói khi hi·ªÉn th·ªã c·∫•u tr√∫c b·∫£ng {table_name}: {e}")
                    
    except Exception as e:
        print(f"‚ùå L·ªói khi t·∫°o b·∫£ng: {e}")
        return False
    
    return True

def run_django_migration():
    """Ch·∫°y Django migration"""
    try:
        print("üîÑ ƒêang ch·∫°y Django migration...")
        
        # T·∫°o migration file
        execute_from_command_line(['manage.py', 'makemigrations', 'phongtro'])
        
        # √Åp d·ª•ng migration
        execute_from_command_line(['manage.py', 'migrate', 'phongtro'])
        
        print("‚úÖ Django migration ho√†n th√†nh!")
        return True
        
    except Exception as e:
        print(f"‚ùå L·ªói Django migration: {e}")
        return False

def main():
    """H√†m ch√≠nh"""
    print("üöÄ B·∫ÆT ƒê·∫¶U T·∫†O B·∫¢NG QU·∫¢N L√ù TIN ƒêƒÇNG PH√íNG")
    print("=" * 50)
    
    # Ki·ªÉm tra k·∫øt n·ªëi database
    try:
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
            print("‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!")
    except Exception as e:
        print(f"‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi database: {e}")
        return
    
    # Ch·ªçn ph∆∞∆°ng th·ª©c t·∫°o b·∫£ng
    print("\nCh·ªçn ph∆∞∆°ng th·ª©c t·∫°o b·∫£ng:")
    print("1. Django Migration (Khuy·∫øn ngh·ªã)")
    print("2. SQL Script tr·ª±c ti·∫øp")
    
    choice = input("Nh·∫≠p l·ª±a ch·ªçn (1 ho·∫∑c 2): ").strip()
    
    if choice == "1":
        success = run_django_migration()
    elif choice == "2":
        success = create_tables()
    else:
        print("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")
        return
    
    if success:
        print("\nüéâ HO√ÄN TH√ÄNH!")
        print("üìù B√¢y gi·ªù b·∫°n c√≥ th·ªÉ:")
        print("  1. Truy c·∫≠p /admin/tin-dang/ ƒë·ªÉ qu·∫£n l√Ω tin ƒëƒÉng")
        print("  2. V√†o /phong-tro/ ƒë·ªÉ xem giao di·ªán user")
        print("  3. ƒêƒÉng tin ph√≤ng m·ªõi t·ª´ admin panel")
    else:
        print("\n‚ùå QU√Å TR√åNH TH·∫§T B·∫†I!")
        print("üìù H√£y ki·ªÉm tra l·∫°i:")
        print("  1. K·∫øt n·ªëi database")
        print("  2. Quy·ªÅn t·∫°o b·∫£ng")
        print("  3. B·∫£ng phongtro ƒë√£ t·ªìn t·∫°i")

if __name__ == "__main__":
    main()