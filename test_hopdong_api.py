#!/usr/bin/env python
"""
Script test API H·ª£p ƒë·ªìng
Ch·∫°y: python test_hopdong_api.py
"""
import requests
import json
from datetime import datetime, date, timedelta

# Base URL c·ªßa API
BASE_URL = 'http://localhost:8000/api/hopdong'

def test_api_endpoint(endpoint, method='GET', data=None):
    """Test m·ªôt API endpoint"""
    url = f"{BASE_URL}/{endpoint}/"
    
    print(f"\n{'='*60}")
    print(f"Testing: {method} {url}")
    print(f"Data: {json.dumps(data, indent=2, default=str) if data else 'None'}")
    print('='*60)
    
    try:
        if method == 'GET':
            response = requests.get(url)
        elif method == 'POST':
            response = requests.post(url, json=data)
        else:
            response = requests.request(method, url, json=data)
        
        print(f"Status Code: {response.status_code}")
        
        try:
            response_data = response.json()
            print("Response:")
            print(json.dumps(response_data, indent=2, default=str, ensure_ascii=False))
        except:
            print("Response (raw):")
            print(response.text)
        
        return response.status_code, response_data if 'response_data' in locals() else response.text
        
    except requests.exceptions.ConnectionError:
        print("‚ùå ERROR: Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server. H√£y ch·∫Øc ch·∫Øn Django server ƒëang ch·∫°y.")
        return None, None
    except Exception as e:
        print(f"‚ùå ERROR: {str(e)}")
        return None, None

def test_workflow_apis():
    """Test c√°c API workflow"""
    print("\nüîÑ TESTING WORKFLOW APIs")
    
    # Test data m·∫´u cho t·∫°o h·ª£p ƒë·ªìng
    contract_data = {
        'MA_PHONG': 1,
        'MA_KHACH_THUE': 1,
        'NGAY_LAP_HD': (date.today()).isoformat(),
        'NGAY_NHAN_PHONG': (date.today() + timedelta(days=1)).isoformat(),
        'NGAY_TRA_PHONG': (date.today() + timedelta(days=365)).isoformat(),
        'THOI_HAN_HD': '12 th√°ng',
        'GIA_THUE': 3000000,
        'NGAY_THU_TIEN': '5',
        'CHU_KY_THANH_TOAN': 'H√†ng th√°ng',
        'SO_THANH_VIEN_TOI_DA': 2,
        'GIA_COC_HD': 3000000,
        'HO_TEN_KT': 'Nguy·ªÖn VƒÉn Test',
        'SDT_KT': '0123456789',
        'NGAY_SINH_KT': '1990-01-01',
        'GIOI_TINH_KT': 'Nam',
        'TAI_KHOAN': 'testuser',
        'MAT_KHAU': 'password123'
    }
    
    # 1. L·∫≠p h·ª£p ƒë·ªìng m·ªõi
    test_api_endpoint('workflow/lap_hop_dong_moi', 'POST', contract_data)
    
    # 2. X√°c nh·∫≠n h·ª£p ƒë·ªìng (gi·∫£ s·ª≠ h·ª£p ƒë·ªìng c√≥ ID = 1)
    test_api_endpoint('workflow/xac_nhan_hop_dong', 'POST', {'ma_hop_dong': 1})
    
    # 3. Sinh h√≥a ƒë∆°n h√†ng th√°ng
    test_api_endpoint('workflow/sinh_hoa_don_hang_thang', 'POST', {
        'thang': datetime.now().month,
        'nam': datetime.now().year
    })
    
    # 4. Gia h·∫°n h·ª£p ƒë·ªìng
    test_api_endpoint('workflow/gia_han_hop_dong', 'POST', {
        'ma_hop_dong': 1,
        'ngay_tra_phong_moi': (date.today() + timedelta(days=730)).isoformat(),
        'thoi_han_moi': '24 th√°ng'
    })
    
    # 5. B√°o k·∫øt th√∫c s·ªõm
    test_api_endpoint('workflow/bao_ket_thuc_som', 'POST', {
        'ma_hop_dong': 1,
        'ngay_bao_ket_thuc': (date.today() + timedelta(days=30)).isoformat(),
        'ly_do': 'Kh√°ch thu√™ chuy·ªÉn c√¥ng t√°c'
    })
    
    # 6. K·∫øt th√∫c h·ª£p ƒë·ªìng
    test_api_endpoint('workflow/ket_thuc_hop_dong', 'POST', {
        'ma_hop_dong': 1,
        'ngay_ket_thuc': date.today().isoformat()
    })

def test_report_apis():
    """Test c√°c API b√°o c√°o"""
    print("\nüìä TESTING REPORT APIs")
    
    # 1. Th·ªëng k√™ tr·∫°ng th√°i
    test_api_endpoint('reports/thong_ke_trang_thai', 'GET')
    
    # 2. H·ª£p ƒë·ªìng s·∫Øp h·∫øt h·∫°n
    test_api_endpoint('reports/sap_het_han?so_ngay=30', 'GET')
    
    # 3. B√°o c√°o doanh thu
    test_api_endpoint(f'reports/doanh_thu?thang={datetime.now().month}&nam={datetime.now().year}', 'GET')

def test_schedule_apis():
    """Test c√°c API t√°c v·ª• t·ª± ƒë·ªông"""
    print("\n‚è∞ TESTING SCHEDULE APIs")
    
    # 1. C·∫≠p nh·∫≠t tr·∫°ng th√°i
    test_api_endpoint('schedule/cap_nhat_trang_thai', 'POST')
    
    # 2. Sinh h√≥a ƒë∆°n t·ª± ƒë·ªông
    test_api_endpoint('schedule/sinh_hoa_don_tu_dong', 'POST', {'ngay_sinh': 1})

def test_invalid_endpoints():
    """Test c√°c endpoint kh√¥ng h·ª£p l·ªá"""
    print("\n‚ùå TESTING INVALID ENDPOINTS")
    
    # Test endpoint kh√¥ng t·ªìn t·∫°i
    test_api_endpoint('workflow/invalid_action', 'POST', {})
    test_api_endpoint('reports/invalid_report', 'GET')
    test_api_endpoint('schedule/invalid_schedule', 'POST', {})

def main():
    """H√†m ch√≠nh"""
    print("üöÄ STARTING API TESTS FOR H·ª¢P ƒê·ªíNG WORKFLOW")
    print(f"Base URL: {BASE_URL}")
    print(f"Time: {datetime.now()}")
    
    # Ki·ªÉm tra k·∫øt n·ªëi c∆° b·∫£n
    print("\nüîç CHECKING CONNECTION...")
    status, _ = test_api_endpoint('reports/thong_ke_trang_thai', 'GET')
    
    if status is None:
        print("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server. Vui l√≤ng:")
        print("   1. Ch·∫Øc ch·∫Øn Django server ƒëang ch·∫°y (python manage.py runserver)")
        print("   2. Ki·ªÉm tra URL trong BASE_URL")
        print("   3. C√†i ƒë·∫∑t APScheduler: pip install APScheduler==3.10.4")
        return
    
    # Ch·∫°y c√°c test
    try:
        test_workflow_apis()
        test_report_apis() 
        test_schedule_apis()
        test_invalid_endpoints()
        
        print("\n‚úÖ TESTING COMPLETED!")
        print("\nüìù NOTES:")
        print("   - M·ªôt s·ªë API c√≥ th·ªÉ fail n·∫øu ch∆∞a c√≥ d·ªØ li·ªáu test")
        print("   - H√£y t·∫°o d·ªØ li·ªáu m·∫´u tr∆∞·ªõc khi test workflow")
        print("   - Ki·ªÉm tra logs Django ƒë·ªÉ xem chi ti·∫øt l·ªói")
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Testing interrupted by user")
    except Exception as e:
        print(f"\n‚ùå Unexpected error: {str(e)}")

if __name__ == "__main__":
    main()